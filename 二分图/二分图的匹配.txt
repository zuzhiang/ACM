http://blog.csdn.net/pi9nc/article/details/11848327
匹配：在图论中，一个「匹配」（matching）是一个边的集合，其中任意两条边都没有公共顶点。

最大匹配：一个图所有匹配中，所含匹配边数最多的匹配，称为这个图的最大匹配。

完美匹配：如果一个图的某个匹配中，所有的顶点都是匹配点，那么它就是一个完美匹配。显然，完美匹配一定是最大匹配（完美匹配的任何一个点都已经匹配，添加一条新的匹配边一定会与已有的匹配边冲突）。但并非每个图都存在完美匹配。

举例来说：如果在某一对男孩和女孩之间存在相连的边，就意味着他们彼此喜欢。是否可能让所有男孩和女孩两两配对，使得每对儿都互相喜欢呢？图论中，这就是完美匹配问题。如果换一个说法：最多有多少互相喜欢的男孩/女孩可以配对儿？这就是最大匹配问题。


求解最大匹配问题的一个算法是匈牙利算法,即用增广路求最大匹配，一般有DFS和BFS两种实现方式

交替路：从一个未匹配点出发，依次经过非匹配边、匹配边、非匹配边...形成的路径叫交替路。

增广路：从一个未匹配点出发，走交替路，如果途径另一个未匹配点（出发的点不算），则这条交替路称为增广路（agumenting path）。


算法轮廓：

⑴置M为空

⑵找出一条增广路径P，通过取反操作获得更大的匹配M'代替M

⑶重复⑵操作直到找不出增广路径为止


变种1：二分图的最小顶点覆盖
在二分图中求最少的点，让每条边都至少和其中的一个点关联，这就是“二分图的最小顶点覆盖”。

二分图的最小顶点覆盖数 = 二分图的最大匹配数


变种2：DAG图（无回路有向图）的最小路径覆盖
用尽量少的不相交简单路径覆盖有向无环图(DAG)的所有顶点，这就是DAG图的最小路径覆盖问题。

DAG图的最小路径覆盖数 = 节点数（n）- 最大匹配数（m）
关键：求二分图的最大匹配数


变种3: 二分图的最大独立集

二分图的最大独立集数 = 节点数（n）- 最大匹配数（m）
关键：求二分图的最大匹配数